name: UPM
on:
  push:
    branches:
    - main
jobs:

  # Build the documentation
  build:
    runs-on: windows-latest # Required by DocFX
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # with:
        #   submodules: true

      - name: Install DocFX
        run: choco install -y docfx

      # update upm branch
      - name: update upm
        run: |
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          git checkout upm || git checkout -b upm
          git rebase -s ours origin/main

      # prepare build
      - name: pre build
        run: |
          cp README.md Documentation~/index.md
          cp CHANGELOG.md Documentation~/changelog.md

      # BUILD
      - name: Build
        run: |
          docfx Documentation~/docfx.json

      # Upload the generated documentation
      - name: Upload site artifact
        uses: actions/upload-artifact@v1
        with:
          name: _site
          path: Documentation~/offline # Must equals the 'build.dest' value on your docfx.json

      # remove useless files
      - name: post build clean
        run: |
          del Documentation~/api -r
          del Documentation~/obj -r
          del Documentation~/index.md
          move Documentation~/changelog.md Documentation~/offline/changelog.md
          del .gitignore
          del .github -r
          if(Test-Path "Samples") {
            Rename-Item -Path "Samples" -NewName "Samples~"
            del Samples.meta
          }

      # push release on upm
      - name: upm release
        run: |
          git add Documentation~/offline
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          if (git status --porcelain)
          {
            git commit -am "Release"
            git push -f -u origin upm
          }


  # publish documentation on gh-page branch
  deploy:
    needs: build
    runs-on: ubuntu-latest # Required by 'JamesIves/github-pages-deploy-action'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # with:
        #   submodules: true

      # Download the generated documentation
      - name: Download site artifact
        uses: actions/download-artifact@v1
        with:
          name: _site

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.AccessToken }} # You need some setup, see https://github.com/JamesIves/github-pages-deploy-action
          BRANCH: gh-pages
          FOLDER: _site

